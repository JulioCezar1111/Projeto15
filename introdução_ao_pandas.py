# -*- coding: utf-8 -*-
"""Introdução ao Pandas

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NEgfuvHSMMoJtAWgQitPDUteT5q3rs3b

# **Importando o pandas**
"""

import pandas as pd # as pd para abreviar

"""# **Criando um dataframe a partir de um dicionario**



*   dataframe; uma tabela dentro do python






"""

# dataframe = pd.DataFrame() é uma tabela vazia

venda = {'data': ['15/02/2021', '16/02/2021'], 
         'valor': [500, 300],
         'produto': ['feijão', 'arroz',],
         'qtde': [50, 70],
         }
vendas_df = pd.DataFrame(venda) # Esse metodo cria uma tabela

"""# **Visualização dos Dados**



*   -Print
*   -Display




"""

display(vendas_df)

"""# **Importando arquivos e bases de dados**

"""

vendas_df = pd.read_excel('/content/drive/MyDrive/Vendas.xlsx') # Recebe o arquivo excel
display(vendas_df)

"""# **Resumos de visualização de dados simples e úteis**


*   head
*   shape
*   describe





"""

display(vendas_df.head()) # mostra quantas linha você quer
print(vendas_df.shape) # informa quantas linhas e colunas tem sua tabela
display(vendas_df.describe())

"""# **Pegar 1 coluna (e os pd.Series)**


*   Series é uma coluna do DataFrame


"""

produtos =  vendas_df['Produto'] # passar entre colchete para ter somente uma coluna
display(produtos) # Series é uma coluna do DataFrame

"""# **.loc, um método muito importante**

*   Pegar 1 linha
*   Pegar linhas de acordo com uma condição
*   Pegar linhas e colunas específicas 
*   pegar 1 valor específico




"""



# pegar uma linha especifiva
''' display(vendas_df.loc[1:5]) # Lder a partir dos indices '''

# pegar linhas que correspodem a uma condição
'''vendas_norteshopping_df = vendas_df['ID Loja'] == 'Norte Shopping'
display(vendas_df.loc[vendas_norteshopping_df])'''

# pegar varias linhas e colunas usando o loc
#.loc[linhas, colunas]
'''vendas_norteshopping_df = vendas_df.loc[vendas_df['ID Loja'] == 'Norte Shopping', ['ID Loja', 'Produto', 'Quantidade']]
display(vendas_norteshopping_df)'''

# pegar 1 valor especifico
'''print(vendas_df.loc[1, 'Produto'])'''

"""# **Adicionar 1 coluna**

"""

# a partir de uma coluna que existe
vendas_df['Comissão'] = vendas_df['Valor Final'] * 0.1
display(vendas_df)

# criar uma coluna com valor padrão
''' : significa todos os valores '''
vendas_df.loc[:, 'Imposto'] = 0
display(vendas_df)

"""# **Adicionar 1 linha**

*   Linhas de um complemento da base de dados



"""

vendas_dez_df = pd.read_excel('/content/drive/MyDrive/Vendas - Dez.xlsx')
# display(vendas_dez_df)

vendas_df = vendas_df.append(vendas_dez_df)
display(vendas_df)

"""# **Excluir linhas e colunas**"""

vendas_df = vendas_df.drop(0, axis=0) # axis zero para linha e Um para coluna 
display(vendas_df)

"""# **Valores Vazios**

*   Deletar linhas/colunas vazias
*   Deletar linhas que possuem valores vazios
*   Preencher valores vazios (média e último valor)





"""

# deletar linhas e colunas completamente vazia
vendas_df = vendas_df.dropna(how = 'all') # para excluir coluna (how = 'all', axis = 1)

# deletar linhas que possuem pelo menos 1 valor vazio
vendas_df = vendas_df.dropna()

# preencher valores vazios
'''preencher com a media'''
vendas_df['Comissão'] = vendas_df['Comissão'].fillna(vendas_df['Comissão'].mean()) # vai preencher os valores com a média da coluna
display(vendas_df)

# preencher com o ultimo valor
vendas_df = vendas_df.ffill()

"""# **Calcular Indicadores**

*   Groupby
*   Value Counts


"""

#  Value Counts
transacoe_loja = vendas_df['ID Loja'].value_counts()
#display(transacoe_loja)

# group by
faturamento_produtos = vendas_df[['ID Loja', 'Valor Final']].groupby('ID Loja').sum()
display(faturamento_produtos)

"""# **Mesclar 2 dataframe (procurar informações de um dataframe em outro)**"""

gerente_df = pd.read_excel('/content/drive/MyDrive/Gerentes.xlsx')
#display(gerente_df)
vendas_df = vendas_df.merge(gerente_df)
display(vendas_df)